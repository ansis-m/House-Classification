type: edu
files:
- name: solution.py
  visible: true
  text: |
    import os
    import requests
    import sys
    import pandas as pd

    if __name__ == '__main__':
        if not os.path.exists('../Data'):
            os.mkdir('../Data')

        # Download data if it is unavailable.
        if 'house_class.csv' not in os.listdir('../Data'):
            sys.stderr.write("[INFO] Dataset is loading.\n")
            url = "https://www.dropbox.com/s/7vjkrlggmvr5bc1/house_class.csv?dl=1"
            r = requests.get(url, allow_redirects=True)
            open('../Data/house_class.csv', 'wb').write(r.content)
            sys.stderr.write("[INFO] Loaded.\n")

        # write your code here
  learner_created: false
- name: test/__init__.py
  visible: false
  learner_created: false
- name: test/tests.py
  visible: false
  text: |-
    import ast
    from hstest.stage_test import List
    from hstest import *

    correct_answer = 0.8836363636363637


    class OrdinalTest(StageTest):

        def generate(self) -> List[TestCase]:
            return [TestCase(time_limit=1000000)]

        def check(self, reply: str, attach):

            reply = reply.strip()

            if len(reply) == 0:
                return CheckResult.wrong("No output was printed")

            if len(reply.split('\n')) != 1:
                return CheckResult.wrong('The number of answers supplied does not equal 1')

            try:
                user_answer= ast.literal_eval(reply)
            except Exception as e:
                return CheckResult.wrong(f"Seems that output is in wrong format.\n"
                                         f"Make sure you use only the following Python structures in the output: string, int, float, list, dictionary")

            if not isinstance(user_answer, float):
                return CheckResult.wrong(f'Print answer as a float')

            if user_answer > correct_answer + 0.01 * correct_answer or user_answer < correct_answer - 0.01 * correct_answer:
                return CheckResult.wrong(f'Seems like your answer is not correct.')

            return CheckResult.correct()


    if __name__ == '__main__':
        OrdinalTest().run_tests()
  learner_created: false
- name: tests.py
  visible: false
  text: |-
    from test.tests import OrdinalTest

    if __name__ == '__main__':    OrdinalTest().run_tests()
  learner_created: false
feedback_link: https://hyperskill.org/projects/370/stages/2191/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 28 Sep 2023 07:30:23 UTC"
record: 4
